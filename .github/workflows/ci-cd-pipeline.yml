# name: Java Maven Build

# on:
#   push:
#     branches:
#       - main
#   pull_request:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up JDK 11
#         uses: actions/setup-java@v3
#         with:
#           java-version: '11'
#           distribution: 'adopt'  # Options: adopt, zulu, etc.

#       - name: Install Maven
#         run: sudo apt-get update && sudo apt-get install -y maven

#       - name: Build with Maven
#         run: mvn clean install

#       - name: Run test
#         run: mvn test

#       - name: SonarQube Scan
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: mvn sonar:sonar

name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=TaskMaster
